#version 450
#extension GL_ARB_separate_shader_objects : enable
#include "global_definition.glsl.h"
#include "tile_common.glsl.h"

layout(push_constant) uniform AirflowUniformBufferObject {
  AirflowUpdateParams params;
};

layout(set = 0, binding = DST_TEMPERATURE_TEX_INDEX, r16f) uniform writeonly image3D dst_temperature;

layout(local_size_x = 8, local_size_y = 8, local_size_z = 4) in;
void main()
{
  // skip 2 lines on border.
  ivec3 pixel_coords = ivec3(gl_GlobalInvocationID.xyz);
  vec3 uvw = (pixel_coords + 0.5f) * params.inv_size;
  vec3 position_ws;
  position_ws.xy = uvw.xy * params.world_range.xy + params.world_min.xy;
  position_ws.z = exp2(uvw.z * log2(1.0f + params.world_range.z)) - 1.0f + params.world_min.z;

  float sea_level_temp = 30.0f + kAbsoluteDegreeFactor;
  float temperature = sea_level_temp - position_ws.z * kDegreeDecreasePerKm;

  imageStore(dst_temperature, pixel_coords, vec4(temperature));
}