#version 450
#extension GL_ARB_separate_shader_objects : enable
#include "global_definition.glsl.h"
#include "noise.glsl.h"
#include "inoise.glsl.h"

// reference : https://developer.nvidia.com/gpugems/gpugems2/part-iii-high-quality-rendering/chapter-26-implementing-improved-perlin-noise

layout(push_constant) uniform PerlinNoiseUniformBufferObject {
  PerlinNoiseInitParams params;
};

layout(set = 0, binding = DST_PERLIN_NOISE_TEX_INDEX, rgba8) uniform writeonly image3D dst_perlin_noise;

layout(local_size_x = 4, local_size_y = 4, local_size_z = 4) in;
void main()
{
	// skip 2 lines on border.
	ivec3 pixel_coords = ivec3(gl_GlobalInvocationID.xyz);
	vec4 noise_value = hash43(vec3(pixel_coords));
	vec3 pixel_position = vec3(pixel_coords);
	vec3 uvw = (pixel_position + 0.5f) / 256.0f;

	//float r = fBm((pixel_position + 0.5f) / 256.0f, 8, 2.0, 0.5);
	float mod_val = 8.0f;
	float r = fbm(uvw * mod_val, mod_val);
	//r *= 1.0f - getWorleyNoise(uvw, 8.0f);

	imageStore(dst_perlin_noise, pixel_coords, vec4(r));
}